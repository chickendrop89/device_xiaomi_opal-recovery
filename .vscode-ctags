!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/hornik/fox_12.1/device/xiaomi/opal/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
AB_OTA_UPDATER	device.mk	/^AB_OTA_UPDATER := true$/;"	m
ALLOW_MISSING_DEPENDENCIES	BoardConfig.mk	/^ALLOW_MISSING_DEPENDENCIES := true$/;"	m
BLKSZ	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define BLKSZ /;"	d	file:
BOARD_AVB_ENABLE	BoardConfig.mk	/^BOARD_AVB_ENABLE := true$/;"	m
BOARD_AVB_VBMETA_SYSTEM	BoardConfig.mk	/^BOARD_AVB_VBMETA_SYSTEM := system$/;"	m
BOARD_AVB_VBMETA_SYSTEM_ALGORITHM	BoardConfig.mk	/^BOARD_AVB_VBMETA_SYSTEM_ALGORITHM := SHA256_RSA2048$/;"	m
BOARD_AVB_VBMETA_SYSTEM_KEY_PATH	BoardConfig.mk	/^BOARD_AVB_VBMETA_SYSTEM_KEY_PATH := external\/avb\/test\/data\/testkey_rsa2048.pem$/;"	m
BOARD_AVB_VBMETA_SYSTEM_ROLLBACK_INDEX	BoardConfig.mk	/^BOARD_AVB_VBMETA_SYSTEM_ROLLBACK_INDEX := $(PLATFORM_SECURITY_PATCH_TIMESTAMP)$/;"	m
BOARD_AVB_VBMETA_SYSTEM_ROLLBACK_INDEX_LOCATION	BoardConfig.mk	/^BOARD_AVB_VBMETA_SYSTEM_ROLLBACK_INDEX_LOCATION := 1$/;"	m
BOARD_BOOTIMAGE_PARTITION_SIZE	BoardConfig.mk	/^BOARD_BOOTIMAGE_PARTITION_SIZE := 134217728$/;"	m
BOARD_BOOT_HEADER_VERSION	BoardConfig.mk	/^BOARD_BOOT_HEADER_VERSION := 2$/;"	m
BOARD_DTB_OFFSET	BoardConfig.mk	/^BOARD_DTB_OFFSET         := 0x07c08000$/;"	m
BOARD_FLASH_BLOCK_SIZE	BoardConfig.mk	/^BOARD_FLASH_BLOCK_SIZE         := 131072$/;"	m
BOARD_KERNEL_BASE	BoardConfig.mk	/^BOARD_KERNEL_BASE        := 0x40078000$/;"	m
BOARD_KERNEL_CMDLINE	BoardConfig.mk	/^BOARD_KERNEL_CMDLINE := \\$/;"	m
BOARD_KERNEL_IMAGE_NAME	BoardConfig.mk	/^BOARD_KERNEL_IMAGE_NAME  := Image.gz$/;"	m
BOARD_KERNEL_PAGESIZE	BoardConfig.mk	/^BOARD_KERNEL_PAGESIZE    := 2048$/;"	m
BOARD_KERNEL_TAGS_OFFSET	BoardConfig.mk	/^BOARD_KERNEL_TAGS_OFFSET := 0x07c08000$/;"	m
BOARD_MAIN_SIZE	BoardConfig.mk	/^BOARD_MAIN_SIZE                := 9126805504$/;"	m
BOARD_PARTITION_LIST	BoardConfig.mk	/^BOARD_PARTITION_LIST := $(call to-upper, $(BOARD_MAIN_PARTITION_LIST))$/;"	m
BOARD_RAMDISK_OFFSET	BoardConfig.mk	/^BOARD_RAMDISK_OFFSET     := 0x11088000$/;"	m
BOARD_SUPER_PARTITION_GROUPS	BoardConfig.mk	/^BOARD_SUPER_PARTITION_GROUPS  := main$/;"	m
BOARD_SUPER_PARTITION_SIZE	BoardConfig.mk	/^BOARD_SUPER_PARTITION_SIZE    := $(BOARD_MAIN_SIZE)$/;"	m
BOARD_USERDATAIMAGE_FILE_SYSTEM_TYPE	BoardConfig.mk	/^BOARD_USERDATAIMAGE_FILE_SYSTEM_TYPE := f2fs$/;"	m
BOARD_USES_METADATA_PARTITION	BoardConfig.mk	/^BOARD_USES_METADATA_PARTITION := true$/;"	m
BOARD_USES_RECOVERY_AS_BOOT	BoardConfig.mk	/^BOARD_USES_RECOVERY_AS_BOOT := true$/;"	m
BOOT_CTRL_MAGIC	bootctrl/boot_control_definition.h	/^#define BOOT_CTRL_MAGIC /;"	d
BOOT_CTRL_VERSION	bootctrl/boot_control_definition.h	/^#define BOOT_CTRL_VERSION /;"	d
BOOT_SECURITY_PATCH	device.mk	/^BOOT_SECURITY_PATCH     := $(PLATFORM_SECURITY_PATCH)$/;"	m
BUILD_BROKEN_DUP_RULES	BoardConfig.mk	/^BUILD_BROKEN_DUP_RULES := true$/;"	m
BUILD_BROKEN_ELF_PREBUILT_PRODUCT_COPY_FILES	BoardConfig.mk	/^BUILD_BROKEN_ELF_PREBUILT_PRODUCT_COPY_FILES := true$/;"	m
BUILD_BROKEN_MISSING_REQUIRED_MODULES	BoardConfig.mk	/^BUILD_BROKEN_MISSING_REQUIRED_MODULES := true$/;"	m
BUILD_BROKEN_USES_NETWORK	BoardConfig.mk	/^BUILD_BROKEN_USES_NETWORK := true$/;"	m
BootControl	bootctrl/BootControl.h	/^class BootControl : public IBootControl {$/;"	c	namespace:android::hardware::boot::V1_2::implementation
BootControlExt	bootctrl/boot_region_control_private.h	/^class BootControlExt {$/;"	c	namespace:android::bootable
COMBOHEAD	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define COMBOHEAD /;"	d	file:
COMMON_LUNCH_CHOICES	AndroidProducts.mk	/^COMMON_LUNCH_CHOICES := \\$/;"	m
DEVICE_DESC_PARAM_MANF_ID	bootctrl/ufs-mtk-ioctl-private.h	/^  DEVICE_DESC_PARAM_MANF_ID = 0x18,$/;"	e	enum:device_desc_param
DEVICE_DESC_PARAM_PRL	bootctrl/ufs-mtk-ioctl-private.h	/^  DEVICE_DESC_PARAM_PRL = 0x2A,$/;"	e	enum:device_desc_param
DEVICE_DESC_UFS_FEATURES_SUPPORT	bootctrl/ufs-mtk-ioctl-private.h	/^  DEVICE_DESC_UFS_FEATURES_SUPPORT = 0x1F,$/;"	e	enum:device_desc_param
DEVICE_PATH	BoardConfig.mk	/^DEVICE_PATH := device\/xiaomi\/opal$/;"	m
DM_BLK_SIZE	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define DM_BLK_SIZE /;"	d	file:
EMMCHEAD	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define EMMCHEAD /;"	d	file:
EMMCHSZ	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define EMMCHSZ /;"	d	file:
HIDL_FETCH_IBootControl	bootctrl/BootControl.cpp	/^IBootControl* HIDL_FETCH_IBootControl(const char* \/* hal *\/) {$/;"	f	namespace:android::hardware::boot::V1_2::implementation	typeref:typename:IBootControl *
HPB_QUERY_OPCODE	bootctrl/ufs-mtk-ioctl.h	/^#define HPB_QUERY_OPCODE /;"	d
Init	bootctrl/BootControl.cpp	/^bool BootControl::Init() {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:bool
LINK1_PL_A	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define LINK1_PL_A /;"	d	file:
LINK1_PL_B	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define LINK1_PL_B /;"	d	file:
LINK_PL_A	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define LINK_PL_A /;"	d	file:
LINK_PL_B	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define LINK_PL_B /;"	d	file:
LOCAL_PATH	Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	device.mk	/^LOCAL_PATH := device\/xiaomi\/opal$/;"	m
LOG_TAG	bootctrl/BootControl.cpp	/^#define LOG_TAG /;"	d	file:
NAME_PL_A	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define NAME_PL_A /;"	d	file:
NAME_PL_B	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define NAME_PL_B /;"	d	file:
PLATFORM_SECURITY_PATCH	device.mk	/^PLATFORM_SECURITY_PATCH := 2127-12-31$/;"	m
PLATFORM_VERSION	device.mk	/^PLATFORM_VERSION                := 99.87.36$/;"	m
PLATFORM_VERSION_LAST_STABLE	device.mk	/^PLATFORM_VERSION_LAST_STABLE    := $(PLATFORM_VERSION)$/;"	m
PLHEAD	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define PLHEAD /;"	d	file:
PREBUILT_PATH	BoardConfig.mk	/^PREBUILT_PATH := $(DEVICE_PATH)\/prebuilt$/;"	m
PRODUCT_BRAND	twrp_opal.mk	/^PRODUCT_BRAND := Xiaomi$/;"	m
PRODUCT_BUILD_SUPER_PARTITION	device.mk	/^PRODUCT_BUILD_SUPER_PARTITION  := false$/;"	m
PRODUCT_DEVICE	twrp_opal.mk	/^PRODUCT_DEVICE := opal$/;"	m
PRODUCT_GMS_CLIENTID_BASE	twrp_opal.mk	/^PRODUCT_GMS_CLIENTID_BASE := android-xiaomi$/;"	m
PRODUCT_MAKEFILES	AndroidProducts.mk	/^PRODUCT_MAKEFILES := \\$/;"	m
PRODUCT_MANUFACTURER	twrp_opal.mk	/^PRODUCT_MANUFACTURER := $(PRODUCT_BRAND)$/;"	m
PRODUCT_MODEL	twrp_opal.mk	/^PRODUCT_MODEL := Redmi Note 11S 5G$/;"	m
PRODUCT_NAME	twrp_opal.mk	/^PRODUCT_NAME := twrp_opal$/;"	m
PRODUCT_SHIPPING_API_LEVEL	device.mk	/^PRODUCT_SHIPPING_API_LEVEL := 30$/;"	m
PRODUCT_TARGET_VNDK_VERSION	device.mk	/^PRODUCT_TARGET_VNDK_VERSION := 31$/;"	m
PRODUCT_USE_DYNAMIC_PARTITIONS	device.mk	/^PRODUCT_USE_DYNAMIC_PARTITIONS := true$/;"	m
QUERY_ATTR_IDN_BOOT_LUN_EN	bootctrl/ufs-mtk-ioctl-private.h	/^  QUERY_ATTR_IDN_BOOT_LUN_EN = 0x00,$/;"	e	enum:attr_idn
QUERY_ATTR_IDN_DEVICE_FFU_STATUS	bootctrl/ufs-mtk-ioctl-private.h	/^  QUERY_ATTR_IDN_DEVICE_FFU_STATUS = 0x14,$/;"	e	enum:attr_idn
QUERY_DESC_DEVICE_MAX_SIZE	bootctrl/ufs-mtk-ioctl-private.h	/^  QUERY_DESC_DEVICE_MAX_SIZE = 0x40,$/;"	e	enum:ufs_desc_max_size
QUERY_DESC_IDN_DEVICE	bootctrl/ufs-mtk-ioctl-private.h	/^  QUERY_DESC_IDN_DEVICE = 0x0,$/;"	e	enum:desc_idn
QUERY_DESC_IDN_STRING	bootctrl/ufs-mtk-ioctl-private.h	/^  QUERY_DESC_IDN_STRING = 0x5,$/;"	e	enum:desc_idn
QUERY_FLAG_IDN_PERMANENTLY_DISABLE_FW_UPDATE	bootctrl/ufs-mtk-ioctl-private.h	/^  QUERY_FLAG_IDN_PERMANENTLY_DISABLE_FW_UPDATE = 0xB,$/;"	e	enum:flag_idn
SetBootRegionSlot	bootctrl/boot_region_control.cpp	/^bool BootControlExt::SetBootRegionSlot(unsigned int slot) {$/;"	f	class:android::bootable::BootControlExt	typeref:typename:bool
TARGET_2ND_ARCH	BoardConfig.mk	/^TARGET_2ND_ARCH         := arm$/;"	m
TARGET_2ND_ARCH_VARIANT	BoardConfig.mk	/^TARGET_2ND_ARCH_VARIANT := armv8-2a$/;"	m
TARGET_2ND_CPU_ABI	BoardConfig.mk	/^TARGET_2ND_CPU_ABI      := armeabi-v7a$/;"	m
TARGET_2ND_CPU_ABI2	BoardConfig.mk	/^TARGET_2ND_CPU_ABI2     := armeabi$/;"	m
TARGET_2ND_CPU_VARIANT	BoardConfig.mk	/^TARGET_2ND_CPU_VARIANT  := cortex-a55$/;"	m
TARGET_2ND_CPU_VARIANT_RUNTIME	BoardConfig.mk	/^TARGET_2ND_CPU_VARIANT_RUNTIME := cortex-a55$/;"	m
TARGET_ARCH	BoardConfig.mk	/^TARGET_ARCH             := arm64$/;"	m
TARGET_ARCH_VARIANT	BoardConfig.mk	/^TARGET_ARCH_VARIANT     := armv8-2a-dotprod$/;"	m
TARGET_BOARD_PLATFORM	BoardConfig.mk	/^TARGET_BOARD_PLATFORM         := mt6833$/;"	m
TARGET_BOOTLOADER_BOARD_NAME	BoardConfig.mk	/^TARGET_BOOTLOADER_BOARD_NAME  := opal$/;"	m
TARGET_CPU_ABI	BoardConfig.mk	/^TARGET_CPU_ABI          := arm64-v8a$/;"	m
TARGET_CPU_ABI2	BoardConfig.mk	/^TARGET_CPU_ABI2         :=$/;"	m
TARGET_CPU_VARIANT	BoardConfig.mk	/^TARGET_CPU_VARIANT      := cortex-a76$/;"	m
TARGET_CPU_VARIANT_RUNTIME	BoardConfig.mk	/^TARGET_CPU_VARIANT_RUNTIME := cortex-a76$/;"	m
TARGET_NO_BOOTLOADER	BoardConfig.mk	/^TARGET_NO_BOOTLOADER          := true$/;"	m
TARGET_OTA_ASSERT_DEVICE	device.mk	/^TARGET_OTA_ASSERT_DEVICE := opal$/;"	m
TARGET_PREBUILT_DTB	BoardConfig.mk	/^TARGET_PREBUILT_DTB      := $(PREBUILT_PATH)\/dtb.img$/;"	m
TARGET_PREBUILT_KERNEL	BoardConfig.mk	/^TARGET_PREBUILT_KERNEL   := $(PREBUILT_PATH)\/Image.gz$/;"	m
TARGET_RECOVERY_FSTAB	BoardConfig.mk	/^TARGET_RECOVERY_FSTAB := $(DEVICE_PATH)\/recovery\/root\/system\/etc\/recovery.fstab$/;"	m
TARGET_RECOVERY_PIXEL_FORMAT	BoardConfig.mk	/^TARGET_RECOVERY_PIXEL_FORMAT := "RGBX_8888"$/;"	m
TARGET_SCREEN_HEIGHT	device.mk	/^TARGET_SCREEN_HEIGHT := 2400$/;"	m
TARGET_SCREEN_WIDTH	device.mk	/^TARGET_SCREEN_WIDTH := 1080$/;"	m
TARGET_USERIMAGES_USE_EXT4	BoardConfig.mk	/^TARGET_USERIMAGES_USE_EXT4  := true$/;"	m
TARGET_USERIMAGES_USE_F2FS	BoardConfig.mk	/^TARGET_USERIMAGES_USE_F2FS  := true$/;"	m
TARGET_USES_LOGD	device.mk	/^TARGET_USES_LOGD        := true$/;"	m
TARGET_USES_MKE2FS	BoardConfig.mk	/^TARGET_USES_MKE2FS          := true$/;"	m
TARGET_USES_UEFI	BoardConfig.mk	/^TARGET_USES_UEFI              := true$/;"	m
TARGET_USE_CUSTOM_LUN_FILE_PATH	device.mk	/^TARGET_USE_CUSTOM_LUN_FILE_PATH := \/config\/usb_gadget\/g1\/functions\/mass_storage.0\/lun.%d\//;"	m
TWRP_INCLUDE_LOGCAT	device.mk	/^TWRP_INCLUDE_LOGCAT     := true$/;"	m
TW_BRIGHTNESS_PATH	device.mk	/^TW_BRIGHTNESS_PATH    := "\/sys\/class\/leds\/lcd-backlight\/brightness"$/;"	m
TW_CUSTOM_CLOCK_POS	BoardConfig.mk	/^    TW_CUSTOM_CLOCK_POS := 40$/;"	m
TW_CUSTOM_CPU_POS	BoardConfig.mk	/^    TW_CUSTOM_CPU_POS := 605$/;"	m
TW_DEFAULT_BRIGHTNESS	device.mk	/^TW_DEFAULT_BRIGHTNESS   := 1020$/;"	m
TW_DEFAULT_BRIGHTNESS	device.mk	/^TW_DEFAULT_BRIGHTNESS := 1200$/;"	m
TW_DEFAULT_LANGUAGE	device.mk	/^TW_DEFAULT_LANGUAGE     := en$/;"	m
TW_EXCLUDE_APEX	device.mk	/^TW_EXCLUDE_APEX         := true$/;"	m
TW_EXCLUDE_DEFAULT_USB_INIT	device.mk	/^TW_EXCLUDE_DEFAULT_USB_INIT     := true$/;"	m
TW_EXCLUDE_TWRPAPP	device.mk	/^TW_EXCLUDE_TWRPAPP      := true$/;"	m
TW_EXTRA_LANGUAGES	device.mk	/^TW_EXTRA_LANGUAGES      := true$/;"	m
TW_FRAMERATE	device.mk	/^TW_FRAMERATE            := 60$/;"	m
TW_INCLUDE_CRYPTO	device.mk	/^TW_INCLUDE_CRYPTO               := true$/;"	m
TW_INCLUDE_CRYPTO_FBE	device.mk	/^TW_INCLUDE_CRYPTO_FBE           := true$/;"	m
TW_INCLUDE_FASTBOOTD	device.mk	/^TW_INCLUDE_FASTBOOTD    := true$/;"	m
TW_INCLUDE_FBE_METADATA_DECRYPT	device.mk	/^TW_INCLUDE_FBE_METADATA_DECRYPT := true$/;"	m
TW_INCLUDE_LIBRESETPROP	device.mk	/^TW_INCLUDE_LIBRESETPROP := true$/;"	m
TW_INCLUDE_NTFS_3G	device.mk	/^TW_INCLUDE_NTFS_3G      := true$/;"	m
TW_INCLUDE_PYTHON	device.mk	/^TW_INCLUDE_PYTHON       := true$/;"	m
TW_INCLUDE_REPACKTOOLS	device.mk	/^TW_INCLUDE_REPACKTOOLS  := true$/;"	m
TW_INCLUDE_RESETPROP	device.mk	/^TW_INCLUDE_RESETPROP    := true$/;"	m
TW_INPUT_BLACKLIST	device.mk	/^TW_INPUT_BLACKLIST      := "hbtp_vm"$/;"	m
TW_LOAD_VENDOR_MODULES	device.mk	/^TW_LOAD_VENDOR_MODULES  := "haptic.ko"$/;"	m
TW_MAX_BRIGHTNESS	device.mk	/^TW_MAX_BRIGHTNESS       := 2047$/;"	m
TW_MAX_BRIGHTNESS	device.mk	/^TW_MAX_BRIGHTNESS     := 2047$/;"	m
TW_NO_FASTBOOT_BOOT	device.mk	/^TW_NO_FASTBOOT_BOOT     := true$/;"	m
TW_NO_SCREEN_BLANK	device.mk	/^TW_NO_SCREEN_BLANK      := true$/;"	m
TW_STATUS_ICONS_ALIGN	BoardConfig.mk	/^    TW_STATUS_ICONS_ALIGN := center$/;"	m
TW_SUPPORT_INPUT_AIDL_HAPTICS	device.mk	/^TW_SUPPORT_INPUT_AIDL_HAPTICS := true$/;"	m
TW_SUPPORT_INPUT_AIDL_HAPTICS_FQNAME	device.mk	/^TW_SUPPORT_INPUT_AIDL_HAPTICS_FQNAME := "IVibrator\/vibratorfeature"$/;"	m
TW_THEME	device.mk	/^TW_THEME                := portrait_hdpi$/;"	m
TW_USE_TOOLBOX	device.mk	/^TW_USE_TOOLBOX          := true$/;"	m
UFSHEAD	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define UFSHEAD /;"	d	file:
UFSHSZ	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define UFSHSZ /;"	d	file:
UFS_DEV	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define UFS_DEV /;"	d	file:
UFS_FEATURES_FFU	bootctrl/ufs-mtk-ioctl-private.h	/^  UFS_FEATURES_FFU = 0x1,$/;"	e	enum:ufs_feature_support_list
UFS_IOCTL_FFU	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_IOCTL_FFU /;"	d
UFS_IOCTL_FFU_MAX_FW_SIZE_BYTES	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_IOCTL_FFU_MAX_FW_SIZE_BYTES /;"	d
UFS_IOCTL_FFU_MAX_FW_VER_BYTES	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_IOCTL_FFU_MAX_FW_VER_BYTES /;"	d
UFS_IOCTL_FFU_MAX_FW_VER_STRING_DESCR_BYTES	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_IOCTL_FFU_MAX_FW_VER_STRING_DESCR_BYTES /;"	d
UFS_IOCTL_GET_FW_VER	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_IOCTL_GET_FW_VER /;"	d
UFS_IOCTL_QUERY	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_IOCTL_QUERY /;"	d
UFS_IOCTL_RPMB	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_IOCTL_RPMB /;"	d
UFS_MTK_IOCTL_H__	bootctrl/ufs-mtk-ioctl.h	/^#define UFS_MTK_IOCTL_H__$/;"	d
UFS_MTK_IOCTL_PRIVATE_H_	bootctrl/ufs-mtk-ioctl-private.h	/^#define UFS_MTK_IOCTL_PRIVATE_H_$/;"	d
UFS_PL_A	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define UFS_PL_A /;"	d	file:
UFS_PL_B	mtk_plpath_utils/mtk_plpath_utils.cpp	/^#define UFS_PL_B /;"	d	file:
UPIU_QUERY_OPCODE_READ_ATTR	bootctrl/ufs-mtk-ioctl-private.h	/^  UPIU_QUERY_OPCODE_READ_ATTR = 0x3,$/;"	e	enum:query_opcode
UPIU_QUERY_OPCODE_READ_DESC	bootctrl/ufs-mtk-ioctl-private.h	/^  UPIU_QUERY_OPCODE_READ_DESC = 0x1,$/;"	e	enum:query_opcode
UPIU_QUERY_OPCODE_READ_FLAG	bootctrl/ufs-mtk-ioctl-private.h	/^  UPIU_QUERY_OPCODE_READ_FLAG = 0x5,$/;"	e	enum:query_opcode
UPIU_QUERY_OPCODE_WRITE_ATTR	bootctrl/ufs-mtk-ioctl-private.h	/^  UPIU_QUERY_OPCODE_WRITE_ATTR = 0x4,$/;"	e	enum:query_opcode
V1_2	bootctrl/BootControl.cpp	/^namespace V1_2 {$/;"	n	namespace:android::hardware::boot	file:
V1_2	bootctrl/BootControl.h	/^namespace V1_2 {$/;"	n	namespace:android::hardware::boot
VENDOR_SECURITY_PATCH	device.mk	/^VENDOR_SECURITY_PATCH   := $(PLATFORM_SECURITY_PATCH)$/;"	m
android	bootctrl/BootControl.cpp	/^namespace android {$/;"	n	file:
android	bootctrl/BootControl.h	/^namespace android {$/;"	n
android	bootctrl/boot_control_definition.h	/^namespace android {$/;"	n
android	bootctrl/boot_region_control.cpp	/^namespace android {$/;"	n	file:
android	bootctrl/boot_region_control_private.h	/^namespace android {$/;"	n
attr_idn	bootctrl/ufs-mtk-ioctl-private.h	/^enum attr_idn {$/;"	g
boot	bootctrl/BootControl.cpp	/^namespace boot {$/;"	n	namespace:android::hardware	file:
boot	bootctrl/BootControl.h	/^namespace boot {$/;"	n	namespace:android::hardware
bootable	bootctrl/boot_control_definition.h	/^namespace bootable {$/;"	n	namespace:android
bootable	bootctrl/boot_region_control.cpp	/^namespace bootable {$/;"	n	namespace:android	file:
bootable	bootctrl/boot_region_control_private.h	/^namespace bootable {$/;"	n	namespace:android
bootloader_control	bootctrl/boot_control_definition.h	/^struct bootloader_control {$/;"	s
bootloader_message_ab	bootctrl/boot_control_definition.h	/^struct bootloader_message_ab {$/;"	s
buf_byte	bootctrl/ufs-mtk-ioctl.h	/^  __u16 buf_byte;$/;"	m	struct:ufs_ioctl_query_data	typeref:typename:__u16
buf_byte	bootctrl/ufs-mtk-ioctl.h	/^  __u16 buf_byte;$/;"	m	struct:ufs_ioctl_query_fw_ver_data	typeref:typename:__u16
buf_byte	bootctrl/ufs-mtk-ioctl.h	/^  __u32 buf_byte;$/;"	m	struct:ufs_ioctl_ffu_data	typeref:typename:__u32
buf_ptr	bootctrl/ufs-mtk-ioctl.h	/^  __u8 * buf_ptr;$/;"	m	struct:ufs_ioctl_ffu_data	typeref:typename:__u8 *
buf_ptr	bootctrl/ufs-mtk-ioctl.h	/^  __u8 * buf_ptr;$/;"	m	struct:ufs_ioctl_query_data	typeref:typename:__u8 *
buf_ptr	bootctrl/ufs-mtk-ioctl.h	/^  __u8 * buf_ptr;$/;"	m	struct:ufs_ioctl_query_fw_ver_data	typeref:typename:__u8 *
buf_size	bootctrl/ufs-mtk-ioctl.h	/^  __u16 buf_size;$/;"	m	struct:ufs_ioctl_query_data_hpb	typeref:typename:__u16
buffer	bootctrl/ufs-mtk-ioctl.h	/^  __u8 buffer[0];$/;"	m	struct:ufs_ioctl_query_data_hpb	typeref:typename:__u8[0]
clearAvbbctlFlag	bootctrl/BootControl.cpp	/^Return<void> BootControl::clearAvbbctlFlag() {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<void>
crc32_le	bootctrl/boot_control_definition.h	/^    uint32_t crc32_le;$/;"	m	struct:bootloader_control	typeref:typename:uint32_t
create_dm	mtk_plpath_utils/mtk_plpath_utils.cpp	/^static int create_dm(const char* device, const char* name, std::string* path, int start_blk,$/;"	f	typeref:typename:int	file:
create_pl_link	mtk_plpath_utils/mtk_plpath_utils.cpp	/^static void create_pl_link(std::string link, std::string devpath) {$/;"	f	typeref:typename:void	file:
create_pl_path	mtk_plpath_utils/mtk_plpath_utils.cpp	/^int create_pl_path(void) {$/;"	f	typeref:typename:int
desc_idn	bootctrl/ufs-mtk-ioctl-private.h	/^enum desc_idn {$/;"	g
device_desc_param	bootctrl/ufs-mtk-ioctl-private.h	/^enum device_desc_param {$/;"	g
flag_idn	bootctrl/ufs-mtk-ioctl-private.h	/^enum flag_idn {$/;"	g
getActiveBootSlot	bootctrl/BootControl.cpp	/^Return<uint32_t> BootControl::getActiveBootSlot() {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<uint32_t>
getCurrentSlot	bootctrl/BootControl.cpp	/^Return<uint32_t> BootControl::getCurrentSlot() {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<uint32_t>
getNumberSlots	bootctrl/BootControl.cpp	/^Return<uint32_t> BootControl::getNumberSlots() {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<uint32_t>
getSnapshotMergeStatus	bootctrl/BootControl.cpp	/^Return<MergeStatus> BootControl::getSnapshotMergeStatus() {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<MergeStatus>
getSuffix	bootctrl/BootControl.cpp	/^Return<void> BootControl::getSuffix(uint32_t slot, getSuffix_cb _hidl_cb) {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<void>
hardware	bootctrl/BootControl.cpp	/^namespace hardware {$/;"	n	namespace:android	file:
hardware	bootctrl/BootControl.h	/^namespace hardware {$/;"	n	namespace:android
idn	bootctrl/ufs-mtk-ioctl.h	/^  __u8 idn;$/;"	m	struct:ufs_ioctl_query_data	typeref:typename:__u8
idn	bootctrl/ufs-mtk-ioctl.h	/^  __u8 idn;$/;"	m	struct:ufs_ioctl_query_data_hpb	typeref:typename:__u8
idx	bootctrl/ufs-mtk-ioctl.h	/^  __u8 idx;$/;"	m	struct:ufs_ioctl_query_data	typeref:typename:__u8
impl_	bootctrl/BootControl.h	/^    android::bootable::BootControl impl_;$/;"	m	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:android::bootable::BootControl
implementation	bootctrl/BootControl.cpp	/^namespace implementation {$/;"	n	namespace:android::hardware::boot::V1_2	file:
implementation	bootctrl/BootControl.h	/^namespace implementation {$/;"	n	namespace:android::hardware::boot::V1_2
implext_	bootctrl/BootControl.h	/^    android::bootable::BootControlExt implext_;$/;"	m	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:android::bootable::BootControlExt
isSlotBootable	bootctrl/BootControl.cpp	/^Return<BoolResult> BootControl::isSlotBootable(uint32_t slot) {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<BoolResult>
isSlotMarkedSuccessful	bootctrl/BootControl.cpp	/^Return<BoolResult> BootControl::isSlotMarkedSuccessful(uint32_t slot) {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<BoolResult>
magic	bootctrl/boot_control_definition.h	/^    uint32_t magic;$/;"	m	struct:bootloader_control	typeref:typename:uint32_t
main	mtk_plpath_utils/mtk_plpath_utils.cpp	/^int main(void) {$/;"	f	typeref:typename:int
markBootSuccessful	bootctrl/BootControl.cpp	/^Return<void> BootControl::markBootSuccessful(markBootSuccessful_cb _hidl_cb) {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<void>
merge_status	bootctrl/boot_control_definition.h	/^    uint8_t merge_status : 3;$/;"	m	struct:bootloader_control	typeref:typename:uint8_t:3
message	bootctrl/boot_control_definition.h	/^    struct bootloader_message message;$/;"	m	struct:bootloader_message_ab	typeref:struct:bootloader_message
nb_slot	bootctrl/boot_control_definition.h	/^    uint8_t nb_slot : 3;$/;"	m	struct:bootloader_control	typeref:typename:uint8_t:3
opcode	bootctrl/ufs-mtk-ioctl.h	/^  __u32 opcode;$/;"	m	struct:ufs_ioctl_query_data	typeref:typename:__u32
opcode	bootctrl/ufs-mtk-ioctl.h	/^  __u32 opcode;$/;"	m	struct:ufs_ioctl_query_data_hpb	typeref:typename:__u32
priority	bootctrl/boot_control_definition.h	/^    uint8_t priority : 4;$/;"	m	struct:slot_metadata	typeref:typename:uint8_t:4
query_opcode	bootctrl/ufs-mtk-ioctl-private.h	/^enum query_opcode {$/;"	g
recovery_tries_remaining	bootctrl/boot_control_definition.h	/^    uint8_t recovery_tries_remaining : 3;$/;"	m	struct:bootloader_control	typeref:typename:uint8_t:3
reserved	bootctrl/boot_control_definition.h	/^    char reserved[1888];$/;"	m	struct:bootloader_message_ab	typeref:typename:char[1888]
reserved	bootctrl/boot_control_definition.h	/^    uint8_t reserved : 7;$/;"	m	struct:slot_metadata	typeref:typename:uint8_t:7
reserved0	bootctrl/boot_control_definition.h	/^    uint8_t reserved0[1];$/;"	m	struct:bootloader_control	typeref:typename:uint8_t[1]
reserved1	bootctrl/boot_control_definition.h	/^    uint8_t reserved1[8];$/;"	m	struct:bootloader_control	typeref:typename:uint8_t[8]
setActiveBootSlot	bootctrl/BootControl.cpp	/^Return<void> BootControl::setActiveBootSlot(uint32_t slot, setActiveBootSlot_cb _hidl_cb) {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<void>
setSlotAsUnbootable	bootctrl/BootControl.cpp	/^Return<void> BootControl::setSlotAsUnbootable(uint32_t slot, setSlotAsUnbootable_cb _hidl_cb) {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<void>
setSnapshotMergeStatus	bootctrl/BootControl.cpp	/^Return<bool> BootControl::setSnapshotMergeStatus(MergeStatus status) {$/;"	f	class:android::hardware::boot::V1_2::implementation::BootControl	typeref:typename:Return<bool>
slot_info	bootctrl/boot_control_definition.h	/^    struct slot_metadata slot_info[4];$/;"	m	struct:bootloader_control	typeref:struct:slot_metadata[4]
slot_metadata	bootctrl/boot_control_definition.h	/^struct slot_metadata {$/;"	s
slot_suffix	bootctrl/boot_control_definition.h	/^    char slot_suffix[32];$/;"	m	struct:bootloader_message_ab	typeref:typename:char[32]
slot_suffix	bootctrl/boot_control_definition.h	/^    char slot_suffix[4];$/;"	m	struct:bootloader_control	typeref:typename:char[4]
successful_boot	bootctrl/boot_control_definition.h	/^    uint8_t successful_boot : 1;$/;"	m	struct:slot_metadata	typeref:typename:uint8_t:1
tries_remaining	bootctrl/boot_control_definition.h	/^    uint8_t tries_remaining : 3;$/;"	m	struct:slot_metadata	typeref:typename:uint8_t:3
ufs_desc_max_size	bootctrl/ufs-mtk-ioctl-private.h	/^enum ufs_desc_max_size {$/;"	g
ufs_feature_support_list	bootctrl/ufs-mtk-ioctl-private.h	/^enum ufs_feature_support_list {$/;"	g
ufs_ioctl_ffu_data	bootctrl/ufs-mtk-ioctl.h	/^struct ufs_ioctl_ffu_data {$/;"	s
ufs_ioctl_query_data	bootctrl/ufs-mtk-ioctl.h	/^struct ufs_ioctl_query_data {$/;"	s
ufs_ioctl_query_data_hpb	bootctrl/ufs-mtk-ioctl.h	/^struct ufs_ioctl_query_data_hpb {$/;"	s
ufs_ioctl_query_fw_ver_data	bootctrl/ufs-mtk-ioctl.h	/^struct ufs_ioctl_query_fw_ver_data {$/;"	s
ufs_set_active_boot_part	bootctrl/boot_region_control.cpp	/^static bool ufs_set_active_boot_part(int boot)$/;"	f	namespace:android::bootable	typeref:typename:bool	file:
update_channel	bootctrl/boot_control_definition.h	/^    char update_channel[128];$/;"	m	struct:bootloader_message_ab	typeref:typename:char[128]
verity_corrupted	bootctrl/boot_control_definition.h	/^    uint8_t verity_corrupted : 1;$/;"	m	struct:slot_metadata	typeref:typename:uint8_t:1
version	bootctrl/boot_control_definition.h	/^    uint8_t version;$/;"	m	struct:bootloader_control	typeref:typename:uint8_t
